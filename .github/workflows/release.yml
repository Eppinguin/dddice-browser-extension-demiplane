# @format
#
# Release to various browser extension stores

name: 'Release'

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: true
        type: string
      chrome:
        description: 'Chrome Webstore'
        default: true
        type: boolean
      edge:
        description: 'Edge Add-ons Store'
        default: true
        type: boolean
      force:
        description: 'Force Release'
        default: false
        type: boolean

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.tag }}

    steps:
      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history for git-cliff

      - name: Update Version
        run: |
          npm --no-git-tag-version --allow-same-version version $VERSION
          MANIFEST=$(cat src/manifest.json | jq ".version |= \"${VERSION/v/}\"")
          echo "$MANIFEST" > src/manifest.json

      - name: Commit
        run: |
          git add .
          git config user.email "developers@dddice.com"
          git config user.name "dddice"
          git commit --allow-empty -m "release: ${{ github.event.inputs.tag }}-${{ github.run_number }}" || echo 'ok'
          git push

      - name: Tag
        if: inputs.force == false
        run: |
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Tag (Force)
        if: inputs.force
        run: |
          git tag -f ${{ github.event.inputs.tag }}
          git push -f origin ${{ github.event.inputs.tag }}

      - name: Build Release
        run: |
          npm ci
          npm run build

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: zip -qq -r ../dddice-browser-extension.zip *
        working-directory: dist

      - name: Cache Files
        uses: actions/cache@v3
        with:
          path: .
          key: ${{ runner.OS }}-cache-${{ github.event.inputs.tag }}-${{ github.run_number }}

  change-log:
    name: Create Release with Change Log
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: .
          key: ${{ runner.OS }}-cache-${{ github.event.inputs.tag }}-${{ github.run_number }}

      - name: Generate Changelog
        id: git-cliff
        uses: orhun/git-cliff-action@v2
        with:
          config: cliff.toml
          args: --current --strip all
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          echo "RELEASE_BODY<<EOF" >>$GITHUB_OUTPUT
          echo "$r" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: ${{ github.event.inputs.tag }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}
          draft: false
          prerelease: false
          allowUpdates: true
          artifacts: dddice-browser-extension.zip
          token: ${{ secrets.GITHUB_TOKEN }}

  chrome:
    if: inputs.chrome == true
    name: Upload to Chrome Web Store
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: .
          key: ${{ runner.OS }}-cache-${{ github.event.inputs.tag }}-${{ github.run_number }}

      - name: Publish Chrome
        uses: levigo/github-action-chrome-webstore-publish@v1.0
        with:
          extensionId: ${{ secrets.CHROME_WEB_STORE_APP_ID }}
          clientId: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          clientSecret: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          refreshToken: ${{ secrets.GOOGLE_OAUTH_REFRESH_TOKEN }}
          inputFile: './dddice-browser-extension.zip'
          doPublish: true
  opera:
    if: inputs.opera == true
    name: Upload to Opera Addons Store
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: .
          key: ${{ runner.OS }}-cache-${{ github.event.inputs.tag }}-${{ github.run_number }}

      - name: Publish Opera
        env:
          WEXT_SHIPIT_OPERA_EMAIL: ${{ secrets.OPERA_EMAIL }}
          WEXT_SHIPIT_OPERA_EXTENSION_ID: ${{ secrets.OPERA_EXTENSION_ID }}
          WEXT_SHIPIT_OPERA_PASSWORD: ${{ secrets.OPERA_PASSWORD }}
        run: |
          npx @wext/shipit opera dist

  edge:
    if: inputs.edge == true
    name: Upload to Opera Addons Store
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: .
          key: ${{ runner.OS }}-cache-${{ github.event.inputs.tag }}-${{ github.run_number }}

      - name: Publish Edge
        uses: wdzeng/edge-addon@v1
        with:
          product-id: '4b7d0dc8-f01b-4136-bccd-ad6e23731042'
          zip-path: './dddice-browser-extension.zip'
          client-id: ${{ secrets.EDGE_CLIENT_ID }}
          client-secret: ${{ secrets.EDGE_CLIENT_SECRET }}
          access-token-url: ${{ secrets.EDGE_ACCESS_TOKEN_URL }}